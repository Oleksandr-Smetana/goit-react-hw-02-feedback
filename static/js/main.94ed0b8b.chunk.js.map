{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","item","type","className","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Feedback","state","leaveFeedback","name","setState","prevState","getTotalFeedback","getPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"+PAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,8BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAI,OAC5B,wBAEEC,KAAK,SACLC,UAAU,WACVC,QAAS,kBAAMP,EAAgBI,IAJjC,SAMGA,GALIA,QCLA,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UCbS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,ICIPC,E,4MACJC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAoBPO,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOE,EAAUF,GAAQ,O,EAI9BG,iBAAmB,WACjB,OAAO,EAAKL,MAAMR,KAAO,EAAKQ,MAAMP,QAAU,EAAKO,MAAMN,K,EAG3DY,8BAAgC,WAC9B,OAAOC,KAAKC,MAAO,EAAKR,MAAMR,KAAO,EAAKa,mBAAsB,M,4CAGlE,WACE,MAA+BI,KAAKT,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,sBAAKL,UAAU,YAAf,UACE,cAACX,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CACEC,QAAS2B,KAAKT,MACdjB,gBAAiB0B,KAAKR,kBAI1B,cAACvB,EAAD,CAASC,MAAM,aAAf,SACG8B,KAAKJ,mBACJ,cAACd,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,KAAKJ,mBACZT,mBAAoBa,KAAKH,kCAG3B,cAACT,EAAD,CAAcC,QAAQ,+B,GA5DXY,aAoERX,ICrEfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.94ed0b8b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {Object.keys(options).map(item => (\n        <button\n          key={item}\n          type=\"button\"\n          className=\"feedback\"\n          onClick={() => onLeaveFeedback(item)}\n        >\n          {item}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage}%</li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  // onBtnGoodClick = () => {\n  //   this.setState({\n  //     good: this.state.good + 1,\n  //   });\n  // };\n\n  // onBtnGoodClick = () => {\n  //   this.setState(prevState => ({ good: prevState.good + 1 }));\n  // };\n\n  // handleClick = event => {\n  //   this.setState(prevState => {\n  //     console.log(prevState);\n  //     console.log(event);\n  //   });\n  // };\n\n  leaveFeedback = name => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  getTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  getPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.getTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div className=\"container\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.getTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.getTotalFeedback()}\n              positivePercentage={this.getPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}