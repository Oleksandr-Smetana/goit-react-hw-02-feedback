{"version":3,"sources":["App.js","index.js"],"names":["Feedback","state","good","neutral","bad","onBtnGoodClick","setState","prevState","onBtnNeutralClick","onBtnBadClick","getTotalFeedback","getGoodFeedbackPercentage","Math","round","className","type","onClick","this","Component","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"wPAKMA,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EASPC,eAAiB,WACf,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEL,KAAMK,EAAUL,KAAO,O,EAGvDM,kBAAoB,WAClB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAAEJ,QAASI,EAAUJ,QAAU,O,EAG7DM,cAAgB,WACd,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAAEH,IAAKG,EAAUH,IAAM,O,EAGrDM,iBAAmB,WACjB,OAAO,EAAKT,MAAMC,KAAO,EAAKD,MAAME,QAAU,EAAKF,MAAMG,K,EAG3DO,0BAA4B,WAC1B,OAAOC,KAAKC,MAAO,EAAKZ,MAAMC,KAAO,EAAKQ,mBAAsB,M,4CAGlE,WACE,OACE,sBAAKI,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,mCAQA,sBAAKA,UAAU,UAAf,UACE,wBAAQC,KAAK,SAASD,UAAU,OAAOE,QAASC,KAAKZ,eAArD,kBAGA,wBACEU,KAAK,SACLD,UAAU,UACVE,QAASC,KAAKT,kBAHhB,qBAOA,wBAAQO,KAAK,SAASD,UAAU,MAAME,QAASC,KAAKR,cAApD,oBAIF,sBAAKK,UAAU,WAAf,UACE,oBAAIA,UAAU,YAAd,wBACCG,KAAKP,mBACJ,+BACE,wCAAWO,KAAKhB,MAAMC,QACtB,2CAAce,KAAKhB,MAAME,WACzB,uCAAUc,KAAKhB,MAAMG,OACrB,yCAAYa,KAAKP,sBACjB,qDAAwBO,KAAKN,4BAA7B,UAGF,4D,GAtEWO,aAkFRlB,ICjFfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3c0d815b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// import Section from './components/Title/Title';\n// import FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  // onBtnGoodClick = () => {\n  //   this.setState({\n  //     good: this.state.good + 1,\n  //   });\n  // };\n\n  onBtnGoodClick = () => {\n    this.setState(prevState => ({ good: prevState.good + 1 }));\n  };\n\n  onBtnNeutralClick = () => {\n    this.setState(prevState => ({ neutral: prevState.neutral + 1 }));\n  };\n\n  onBtnBadClick = () => {\n    this.setState(prevState => ({ bad: prevState.bad + 1 }));\n  };\n\n  getTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  getGoodFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.getTotalFeedback()) * 100);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Please leave feedback</h1>\n\n        {/* <FeedbackOptions\n          options={this.state}\n          onLeaveFeedback={\n            (this.onBtnGoodClick, this.onBtnNeutralClick, this.onBtnBadClick)\n          }\n        /> */}\n        <div className=\"buttons\">\n          <button type=\"button\" className=\"good\" onClick={this.onBtnGoodClick}>\n            Good\n          </button>\n          <button\n            type=\"button\"\n            className=\"neutral\"\n            onClick={this.onBtnNeutralClick}\n          >\n            Neutral\n          </button>\n          <button type=\"button\" className=\"bad\" onClick={this.onBtnBadClick}>\n            Bad\n          </button>\n        </div>\n        <div className=\"statWrap\">\n          <h1 className=\"statTitle\">Statistics</h1>\n          {this.getTotalFeedback() ? (\n            <ul>\n              <li>Good: {this.state.good}</li>\n              <li>Neutral: {this.state.neutral}</li>\n              <li>Bad: {this.state.bad}</li>\n              <li>Total: {this.getTotalFeedback()}</li>\n              <li>Positive feedback: {this.getGoodFeedbackPercentage()}%</li>\n            </ul>\n          ) : (\n            <p>No feedback given</p>\n          )}\n        </div>\n\n        {/* <Section title=\"\" />\n        <FeedbackOptions options={ } onLeaveFeedback={ } />\n      <Statistics good={ } neutral={ } bad={ } total={ } positivePercentage={ } />\n      <Notification message=\"No feedback given\" /> */}\n      </div>\n    );\n  }\n}\nexport default Feedback;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}